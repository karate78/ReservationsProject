@model ReservationProject.DATA.EF.OwnerAsset

@{
    ViewBag.Title = "Edit " + Model.ChildName;
}




@using (Html.BeginForm("Edit", "OwnerAssets", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()
    if ((User.IsInRole("Admin")) || (User.IsInRole("User")))
    {
        <div class="form-horizontal" id="form-container">
            <h3>@ViewBag.Title</h3>
            <hr />
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            @Html.HiddenFor(model => model.OwnerAssetId)
            @Html.HiddenFor(model => model.OwnerId)
            @Html.HiddenFor(model => model.ChildPhoto)
            @Html.HiddenFor(model => model.DateAdded)


            <div class="form-group">
                @Html.LabelFor(model => model.ChildName, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.ChildName, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.ChildName, "", new { @class = "text-danger" })
                </div>
            </div>

            @*<div class="form-group">
                    @Html.LabelFor(model => model.OwnerId, "OwnerId", htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.DropDownList("OwnerId", null, htmlAttributes: new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.OwnerId, "", new { @class = "text-danger" })
                    </div>
                </div>*@

            <div class="form-group">
                @Html.LabelFor(model => model.ChildPhoto, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    <img src="~/Content/images/@Model.ChildPhoto" style="max-width: 100px;" alt="@Model.ChildName" />
                    <br />
                    <input type="file" name="childImage" />
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.SpecialNotes, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.SpecialNotes, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.SpecialNotes, "", new { @class = "text-danger" })
                </div>
            </div>


            @*<div class="form-group">
                    @Html.LabelFor(model => model.DateAdded, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.DateAdded, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.DateAdded, "", new { @class = "text-danger" })
                    </div>
                </div>*@

            <div class="form-group">
                @Html.LabelFor(model => model.ChildDOB, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.ChildDOB, new { htmlAttributes = new { @class = "datepicker", @autocomplete = "off" } })
                    @Html.ValidationMessageFor(model => model.ChildDOB, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.SkillLevel, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.SkillLevel, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.SkillLevel, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <input type="submit" value="Save" class="btn btn-default" />
                </div>
            </div>
        </div>
    }
    else
    {
        <div class="form-horizontal" id="form-container">
            <h3>@ViewBag.Title</h3>
            <hr />
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            @Html.HiddenFor(model => model.OwnerAssetId)
            @Html.HiddenFor(model => model.ChildName)
            @Html.HiddenFor(model => model.OwnerId)
            @Html.HiddenFor(model => model.ChildPhoto)
            @Html.HiddenFor(model => model.DateAdded)
            @Html.HiddenFor(model => model.ChildDOB)
            @Html.HiddenFor(model => model.SkillLevel)

            <div class="form-group">
                @Html.LabelFor(model => model.SpecialNotes, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.SpecialNotes, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.SpecialNotes, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <input type="submit" value="Save" class="btn btn-default" />
                </div>
            </div>
        </div>
    }



}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
